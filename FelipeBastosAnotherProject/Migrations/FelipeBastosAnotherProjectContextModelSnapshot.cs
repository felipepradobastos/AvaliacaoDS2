// <auto-generated />
using System;
using FelipeBastosAnotherProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FelipeBastosAnotherProject.Migrations
{
    [DbContext(typeof(FelipeBastosAnotherProjectContext))]
    partial class FelipeBastosAnotherProjectContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FelipeBastosAnotherProject.Models.Jogador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Idade");

                    b.Property<string>("Nacionalidade");

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Jogador");
                });

            modelBuilder.Entity("FelipeBastosAnotherProject.Models.Placar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("data");

                    b.Property<int>("jogadorID");

                    b.Property<int>("pontos");

                    b.HasKey("Id");

                    b.HasIndex("jogadorID");

                    b.ToTable("Placar");
                });

            modelBuilder.Entity("FelipeBastosAnotherProject.Models.Placar", b =>
                {
                    b.HasOne("FelipeBastosAnotherProject.Models.Jogador", "jogador")
                        .WithMany()
                        .HasForeignKey("jogadorID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
